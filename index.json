[{"categories":["tech doc"],"content":"Demo: https://swallowblack.github.io/ ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:0","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"1. 在mac上安装Hugo框架 在Hugo官网下载想要的安装包：Hugo extended version (recommended). 按照官方指南： official hugo installation guide 进行安装。 根据自己的需要安装在电脑的相应位置，我选择了安装在 ~/bin。安装完成后记得将hugo路径添加到自己电脑的环境中（我的在.zshrc中添加路径）。 ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:1","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"2. 下载Lovelt主题文件 按照 LoveIt official guide 下载主题文件到自己的站点目录相应位置。 ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:2","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"3. 站点基本配置 按照前面的 LoveIt official guide完成基本配置。 3.1 在本地测试 # create a new post hugo new posts/first_post.md # 在本地运行 hugo serve # 或者： # -D: buildDraft 显示标记为草稿的博文 # --disableFastRender 可实时预览。不用此参数似乎也可以。 # -e production 开启一些特性如评论系统等 hugo serve -D --disableFastRender -e production 3.2 发布到github page hugo 执行该命令，会生成一个 public 目录, 包含你网站的所有静态内容和资源. 现在可以将其部署在任何 Web 服务器上。以github为例： 为public文件夹关联你的github page repo git init git remote add upstream https://github.com/xxxx/xxxx.github.io.git git add . git commit -m \"xxxx\" git push upstream master 几分钟后即可在https://xxxx.github.io/ 看到你部署好的网站。为了方便可写一脚本deploy.sh放在站点根目录下，以后每次执行此脚本即可。 #!/bin/sh # If a command fails then the deploy stops set -e printf \"\\033[0;32mDeploying updates to GitHub...\\033[0m\\n\" # Build the project. hugo # if using a theme, replace with `hugo -t \u003cYOURTHEME\u003e` # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\"rebuilding site $(date)\" if [ -n \"$*\" ]; then msg=\"$*\" fi git commit -m \"$msg\" # Push source and build repos. git push upstream master 3.3 文章模板 cp themes/LoveIt/archetypes/default.md archetypes 3.4 添加评论系统 我选择的Valine，评论时不需要注册。在LeanCloud （我选择的国际版）注册和创建app用以管理评论和阅读量统计。需要在app中新建Comment，Counter类，详细步骤google，有许多参考文章。然后需要在站点配置文件valine相关配置中填写你在LeanCloud的id和key。 3.5 如何添加站内搜索功能 此LoveIt版本自带搜索功能，非常方便，只需使用LoveIt主题的默认配置即可。主题提供了另外一种方式，没有试过，默认的方式目前用着还好。 ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:3","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"4. 如何在menu bar添加Github和RSS链接 在站点的配置文件config.toml添加一下内容即可 [menu] [[menu.main]] identifier = \"github\" pre = \"\u003ci class=\\\"fab fa-github fa-fw\\\"\u003e\u003c/i\u003e\" post = \"\" name = \"\" url = \"https://github.com/swallowblack\" title = \"GitHub\" weight = 4 [[menu.main]] identifier = \"rss\" pre = \"\u003ci class=\\\"fa fa-rss fa-fw\\\"\u003e\u003c/i\u003e\" post = \"\" name = \"\" url = \"https://swallowblack.github.io/posts/index.xml\" title = \"RSS\" weight = 5 ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:4","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"5. 如何使用lightgallery 在文章的前置参数中 lightgallery: 如果设为 true, 文章中的图片将可以按照画廊形式呈现. 在.md文章中，图片的引用需要用 image shortcode 的形式，如 {{ \u003c image src=\"https://tva1.sinaimg.cn/large/007S8ZIlly1gjcqft8cedj30qo0hsdh6.jpg\" caption=\"Wheat\" \u003e}} 注意：为避免冲突，上面的代码中\u003c前面多了一个空格。 Wheat\" Wheat ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:5","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["tech doc"],"content":"6. 如何设置文章的特色图片featured image 在文章的前置参数中添加： featuredImage:\"\"featuredImagePreview:\"\" featuredImage: 文章的特色图片 featuredImagePreview: 用于在主页预览的文章的特色图片 ","date":"2020-10-01","objectID":"/building-website-with-hugo/:0:6","tags":["blog"],"title":"Building Website With Hugo|用Hugo框架建博客网站","uri":"/building-website-with-hugo/"},{"categories":["other"],"content":" 欧美疫情防控普遍效率低下，在社交媒体看到有文章从体制的差异找原因，有从国家能力、对政府信任的角度去分析，也有从社会组织学的角度去观察。就目前自己作为普通老百姓所能看到的，除去反应时机，疫情防控效率的核心在于隔离的强度。美国各个州和联邦政府一方面调集各种资源，支持医疗体系。尤其纽约州，目前在医疗物资准备方面还是让人信任的; 另一方面，为减少人群聚集， 美国经济也已经停摆数周。州长与媒体们反复强调 Social Distancing，但是始终没有办法“强制隔离”和“追踪密切接触者”。不知道这是社会的幸与不幸。  想起小时每年寒暑假都会去外婆家，有一回大舅家的猫被鱼骨头卡着喉咙了，我和表妹、表弟们试图帮它把鱼骨头取出来。我们找来了钳子、手套，折腾了很久，人很疲惫，猫也焦躁。后来外公过来了，接过钳子，抓住猫的颈背，硬生生用钳子把猫的嘴撬开，不管它怎么嘶嚎、挣扎，我们在旁边看得心疼。可是三两分钟后，一根带着长刺的鱼骨头就被钳子夹出来了，猫也就默默蹓走了。感觉这次疫情的中国就像是外公。欧美就像是我和表弟、表妹们。一个月，湖北、广东、韩国新增病例从飙升到接近零。意大利也一个月了，看起来到了山顶，纽约的山顶似乎接近了。  简单粗暴画了下现在的疫情形势： Raw Data From: Johns Hopkins CSSE ","date":"2020-04-01","objectID":"/covid-19/:0:0","tags":["covid-19"],"title":"COVID-19 疫情","uri":"/covid-19/"},{"categories":["nature"],"content":" 疫情当中，小城目前官方数据还没有大规模的感染。因为平时出门也不会见到很多人，除非公园里有活动的时候，于是傍晚还是走去小区后面公园里散步了。人数和平常差不多，草坪上有一个人在遛狗，篮球场上还是有三四个人在打球，路边有一个人跑步。天气微冷，看到棒球场上去年冬天离开的那对鱼鹰（Osprey）又回来了，在灯柱上警惕地坐着。有一只不时会飞起来，盘旋两圈。前年刚看到它们的时候还很有些担心灯的温度会烫伤它们，差点儿给小城警察打电话。后来发现这个巢的竞争很激烈，中间发生过多起争巢的打斗。有一次竟看到五六只鱼鹰争抢这个位置，但凡一只鹰站到巢上，马上就会有别的鹰俯冲下来，死命的抓住它往下抛。接近冬天它们快要离开时，甚至乌鸦也敢结伙过来骚扰。鱼鹰走后，乌鸦便在巢里捡拾剩余的食物。  鱼鹰在美东较常见，有时在高速公路上便能看到它们爪下抓着银闪闪的活鱼飞过。 诗经《关雎》里的雎鸠，中译英官方翻译是 Osprey，即这种鸟。也有根据叫声“关关”判断，认为是野鸭(见mallard篇) 的。 Washington Park baseball field\" Washington Park baseball field Washington Park baseball field\" Washington Park baseball field Washington Park baseball field\" Washington Park baseball field ","date":"2020-03-31","objectID":"/osprey-back/:0:0","tags":["ospray"],"title":"鱼鹰|osprey","uri":"/osprey-back/"},{"categories":["other"],"content":"今天跟家人视频，YC一上来就要求说想听“四个”故事。她会数数了，借来的三个绘本都讲完了，还差一个。她说想听故事里猫头鹰的声音。于是在 YOUTUBE 上找了一段别人录的五六种猫头鹰的声音，她听得激动起来，喊害怕，又要听。旁边两岁的妹妹似乎也听到了奇怪的声音，跟着姐姐一起笑。 时间不早了，我这边已经晚上十点多，奶奶便跟她商议姑姑那边晚上了，要睡觉了，下周姑姑再和你视频。眼看还不能平息，奶奶使出杀手锏，“我们这儿白天，姑姑那里晚上了，要睡觉了；等姑姑那边白天了，我们就晚上了”。以前听到这个，她会一本正经地自己复述一遍这句话就不闹了，今天突然好奇心起来，扭头望着奶奶，满是疑惑地直喊，“这是怎么回事呀！？” 我和奶奶忙说你现在还小，不能理解，等长大读书多了就明白了。她还是焦躁地喊着，“怎么回事啊！？”。好吧，试试吧，用拳头比划不出来，我四处搜寻，找不到球型的东西 ，权且摸了一截筒卷纸打比方：“你和奶奶在这头，姑姑在这头，太阳照在你们这边，姑姑这儿照不到太阳就是晚上，你们那边就是白天；卷筒转了一圈，姑姑就朝着太阳变白天了，你们照不到太阳就变晚上了。不停地转啊转啊…” 没想到她真的听进去了，高兴地抓了她身边的一截筒卷纸也像我演示的一样，边说边转了起来。奶奶再让她跟姑姑说再见，便乖乖地配合了。 ","date":"2020-03-08","objectID":"/%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B%E5%91%80/:0:0","tags":["yc"],"title":"怎么回事呀","uri":"/%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B%E5%91%80/"},{"categories":["other"],"content":"向之前一样从图书馆借了三本绘本，预备跟家里人视频的时候给小侄女讲故事用。最近比较焦躁，有两周没有和YC视频了，这三本书在我的书包里待到图书到期又续借。到视频时更是没提前看看故事的内容，便开讲了。听到要讲故事了，YC一脸高兴。第一个故事比较简单，书本还配了故事角色的木头道具，YC听得挺高兴。第二个故事则遇到了灾难，一边要自己当场查单词，一边自己也没弄清故事的逻辑，视频信号不好的问题也显现出来…… 自己还在踌躇当中，四岁的小侄女决然地把视频掐断了，还发来一个语音“你睡觉吧。你休息会儿…吧”。反省…… ","date":"2020-02-17","objectID":"/%E8%A2%AB%E5%B0%8F%E4%BE%84%E5%A5%B3%E6%8C%82%E7%94%B5%E8%AF%9D%E4%BA%86/:0:0","tags":["yc"],"title":"被小侄女挂电话了","uri":"/%E8%A2%AB%E5%B0%8F%E4%BE%84%E5%A5%B3%E6%8C%82%E7%94%B5%E8%AF%9D%E4%BA%86/"},{"categories":["tech doc"],"content":"As a beginner, I manually add several dotfiles to the Github repo like this. # Create a Repo git clone git@github.com:\u003cusername\u003e/dotfiles.git cd dotfiles mv ~/.vimrc . git add .vimrc git commit -m \"your message\" # Symbolically linking files ln -s /path/to/dotfiles/.vimrc ~/.vimrc # push to remote git push origin master References: Some tutorials : Guide to dotfiles on Github ","date":"2020-02-17","objectID":"/track-your-computer-settings/:0:0","tags":["git"],"title":"Create a Repo to Track Your Computer's Settings","uri":"/track-your-computer-settings/"},{"categories":["nature"],"content":"一天午后从窗口望见斜对面树杈上飞起数只体型很大的黑鸟。搜索知是“红头美洲鹫”，又名“火鸡秃鹫”。近期多次看到他们在附近徘徊。后来又遇到另外一种，头部不是红色而是黑色，名 Black Vulture. 第三张图片上即是此类，在小区内的垃圾箱翻捡食物。 小区树上的Turkey Vulture\" 小区树上的Turkey Vulture 小区树上的Turkey Vulture\" 小区树上的Turkey Vulture 小区垃圾箱上的Turkey Vulture\" 小区垃圾箱上的Turkey Vulture ","date":"2020-02-17","objectID":"/turkey-vulture/:0:0","tags":["turkey-vulture"],"title":"秃鹫|Turkey Vulture","uri":"/turkey-vulture/"},{"categories":["tech doc"],"content":"Study note of the Course: Udacity Course: Version Control with Git ","date":"2020-02-16","objectID":"/version-control-basics/:0:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"What is version Control Example: Control -Z Types of Version Control: Centralized and Distributed(e.g. Git) Terminology: SCM(Source Control Manager)/VCS(Version Control System) Git Setup and Config # sets up Git with your name git config --global user.name \"\u003cYour-Full-Name\u003e\" # sets up Git with your email git config --global user.email \"\u003cyour-email-address\u003e\" # makes sure that Git output is colored git config --global color.ui auto # displays the original state in a conflict git config --global merge.conflictstyle diff3 git config --list git config --global core.editor \"mvim -f\" ","date":"2020-02-16","objectID":"/version-control-basics/:1:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Create A Repo Method1: Create a new directory and “git init” in the dir. Method2: “git clone …” ","date":"2020-02-16","objectID":"/version-control-basics/:2:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Review A Repo’s History git status git log # Info it displays include SHA, Author, Date, commit message … Flags: –oneline: Only SHA and commit messages are displayed –stat: statistics of file changes -p: patch: details of file changes [PS] How to scroll down/up Command Line Pager? shortcuts: down: j: one line d: half page f: one page up: k: one line u: half page b: one page ","date":"2020-02-16","objectID":"/version-control-basics/:3:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Add Commits To A Repo Three areas of Git system: Working directory Staging Index Repository directory # From working dir to staging area git add index.html git add . git diff # similar to git log -p # From staging area to Repo dir git commit # core.editor will be opened git commit -m \"message\" How to ignore a file? Create a file named “.gitignore” in the same path with “.git” ","date":"2020-02-16","objectID":"/version-control-basics/:4:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"About Globing? -*: Any number of characters including none ?: Any single character [abc]: [0-9]: [!3-7]: Except [3-7] ","date":"2020-02-16","objectID":"/version-control-basics/:4:1","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Tagging, Branching, and Merging ","date":"2020-02-16","objectID":"/version-control-basics/:5:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Tagging git tag -a v1.0 ","date":"2020-02-16","objectID":"/version-control-basics/:5:1","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Branching # List branches git branch # Create a branch named sidebar git branch sidebar # Switch branches git checkout sidebar # Start position git branch alt-sidebar \u003cSHA\u003e # Delete a branch --delete or -d git branch -d sidebar # Shortcut for --delete --force git branch -D sidebar ","date":"2020-02-16","objectID":"/version-control-basics/:5:2","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Merging git merge [\u003cbranch\u003e] # merge the branch into current branch How to solve merge conflicts? Decide not to merge. git merge –abort can be used for this. Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and git add them to the index. Use git commit or git merge –continue to seal the deal. The area where a pair of conflicting changes happened is marked with markers «««\u003c, =======, and »»»\u003e. The part before the ======= is typically your side, and the part afterwards is typically their side. ||||||| marker is followed by the original text. ","date":"2020-02-16","objectID":"/version-control-basics/:5:3","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Undoing Changes # Update last commit message；reword: working dir 做了改动之后想与上次提交的commit合并 git commit --amend git revert # Create a new commit that undo a specific commit git reset # Be careful! # Before resetting, you can create a backup branch on the most-recent commit git branch backup # restore file to status before modified(deleted) git checkout -- filename git checkout -- . # delete newly created files(untracked) git clean -i -d # Becareful! -i:interactive ","date":"2020-02-16","objectID":"/version-control-basics/:6:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Relative Commit References HEAD^, HEAD^^, HEAD^^^, HEAD^^2 HEAD~, HEAD~2, HEAD~3 With a merge commit, ^ indicate the first parent; ^2 indicate the second parent. The first pare was the branch you were on when you ran git merge ","date":"2020-02-16","objectID":"/version-control-basics/:6:1","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"Git Reset’s Flags –mixed # Move the changes to working dir –soft # Move the changes to Staging Index –hard #Move the changes to trash ","date":"2020-02-16","objectID":"/version-control-basics/:6:2","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["tech doc"],"content":"References: Git Doc Udacity Course: Version Control with Git Create a repo to track your computer’s settings - https://dotfiles.github.io/ Try tackling some Git challenges with the Git-it app ","date":"2020-02-16","objectID":"/version-control-basics/:7:0","tags":["git"],"title":"Version Control with Git","uri":"/version-control-basics/"},{"categories":["nature"],"content":"春天快到了，清晨又开始听到Cardinal的叫声了。一年前刚来这里的时候，在路边有时会看到一种全身红色长相奇特的鸟，让人想起几年前盛行的一款游戏“愤怒的小鸟”。搜索后发现果然是“愤怒的小鸟”原型。此鸟名为“Northern Cardinal”，被指定为美国七个州的州鸟。 “cardinal” 原义“重要的”，后指罗马天主教的高层主教，也指主教所穿红色、鲜亮的袍子。 小区树林\" 小区树林 小区树林\" 小区树林 ","date":"2020-02-14","objectID":"/northern-cardinal/:0:0","tags":["northern-cardinal"],"title":"愤怒的小鸟|Northern Cardinal","uri":"/northern-cardinal/"},{"categories":["nature"],"content":"今天看到野鸭回来了. 诗经《关雎》中有“关关雎鸠，在河之洲。窈窕淑女，君子好逑。” 这当中的雎鸠，有人认为是鱼鹰（见本站中Osprey篇)。 雎鸠：毛传：“雎鸠，王雎也。”《尔雅·释鸟》：“雎鸠，王鴡（鴡=雎）。” 郭璞(pú）注：“雕类，今江东呼之为鹗，好在江渚山边食鱼。”《禽经》：“王雎，雎鸠，鱼鹰也。”《现代汉语词典》：“鹗，鸟名，背部褐色，头、颈和腹部白色。性凶猛。常在树上或岩石上筑巢，常在水面上飞翔，吃鱼类。通称鱼鹰。” 另一种说法为本文中的野鸭（mallard），因为相比鱼鹰(Osprey)，其叫声更近“关关”。 这两种鸟恰好在附近公园里都出现过，从诗的意境上，似乎野鸭更适合些，鱼鹰看起来太过凶猛，虽然它们都经常成对出现。鱼鹰对应的鸟还有鸬鹚，看起来不像。 A pair of mallard at Washington Park 2/3/2020\" A pair of mallard at Washington Park 2/3/2020 4/19/2019, male\" 4/19/2019, male 4/19/2019, female\" 4/19/2019, female ","date":"2020-02-03","objectID":"/mallard/:0:0","tags":["mallard"],"title":"野鸭|mallard","uri":"/mallard/"},{"categories":["tech doc"],"content":"引入正则表达式模块 import re ","date":"2020-01-28","objectID":"/python-regex-basics/:0:0","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"一般字符 .: 除换行符(\\n)外的任意字符 \\: 转义字符 如: \\\\, \\. 如: [au], [a-z], [A-Z], [0-9], [0-9a-z], [^ac](非ac) re.search(r\"r[A-Z]n\", “run”) ","date":"2020-01-28","objectID":"/python-regex-basics/:0:1","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"预定义字符集 \\d: 数字 [0-9] \\D: 非数字 [^\\d] \\s: 空白符[\\t\\n\\r\\f\\v] \\S: 非空白字符 [^\\s] \\w: 单词字符 [a-zA-Z0-9] \\W: 非单词字符 ","date":"2020-01-28","objectID":"/python-regex-basics/:0:2","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"边界匹配 ^: 匹配每一行的开头 $: 匹配每一行的末尾 ","date":"2020-01-28","objectID":"/python-regex-basics/:0:3","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"数量词 ?: may or may not occur * 前一个字符0次或无限次 +: 前一个字符1次或无限次 {m,n}: 前一个字符m至n次 ","date":"2020-01-28","objectID":"/python-regex-basics/:0:4","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"逻辑与分组 |: 代表左右表达式任意一个 abc|def =\u003e abc or def (…): 被括起来的表达式作为分组 a(123|456)b =\u003e a123b or a456b (?P\u003cname\u003e…): 分组, 除原有的编号外再制定一个别名 (?P\u003cid\u003eabc){2} =\u003e abcabc match = re.search(r\"(\\d+), Date: (.+)\", \"ID:02345, Date: Jan/28/2020\") print(match.group()) print(match.group(2)) match = re.search(r\"(?P\u003cid\u003e\\d+), Date: (?P\u003cdate\u003e.+)\", \"ID:02345, Date: Jan/28/2020\") print(match.group('date')) \\\u003cnumber\u003e: 引用编号为\u003cnumber\u003e的分组匹配到的字符窜. (\\d)abc\\1 =\u003e 1abc1 or 3abc3 (?P=name): 引用别名为\u003cname\u003e的分组匹配到的字符窜. (?P\u003cid\u003e\\d)abc(?P=id) =\u003e 1abc1 or 3abc3 ","date":"2020-01-28","objectID":"/python-regex-basics/:0:5","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"寻找所有匹配 re.search(): 查找匹配 re.findall(): 查找找所有匹配 re.sub: 查找并替换 re.split(): 查找与分割 re.compile(): re.findall(r\"r[ua]n\", \"run ran ren\") re.split(r\"[,;\\.]\", \"a;b,c.d\") compile_re = re.compile(r\"r[au]n\") print(compile_re.search(\"fly a kite run\")) ","date":"2020-01-28","objectID":"/python-regex-basics/:0:6","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"参考: 正则表达式-Python基础 ","date":"2020-01-28","objectID":"/python-regex-basics/:0:7","tags":["python"],"title":"Python RegEx Basics","uri":"/python-regex-basics/"},{"categories":["tech doc"],"content":"1. du – display disk usage statistics du -d 1 -h Documents # -d:depth -h:\"human-readable\" du -d 0 -h Documents ","date":"2020-01-23","objectID":"/linux-basics/:0:1","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"2. grep – file pattern searcher grep stands for “global regular expression print”. It searches files for lines that match a pattern and returns the results. It is case sensitive. grep \"Apple\" fruit.txt grep -i \"Apple\" fruit.txt #-i:case insensitive grep -R \"Apple\" ~/Documents/fruit # -R: recursive Using Grep + Regex [] Matches any one of a set(a rang with a hyphen) characters ^: The pattern following it must occur at the beginning of each line. $: The pattern preceding it must occur at the end of each line. *: zero or more occurrences of the previous character .(dot): Matches any one character (dot).*: Nothing or any number of character ls -l|grep \".*.py$\" # end of the line grep \"^apple\" /home/wang/test.c #begin of the line grep \"t[ae]mp\" test.txt #tamp or temp grep \"t[a-c]mp\" test.txt # tamp,tbmp,tcmp grep \"tmp[0-9][a-z]\" filename #eg. tmp07 grep \"..ock\" filename grep \"tmp\\.\\[abc\\]\" filename grep \"C\\.T\\.Cummo\" filename #C.T.Cummo grep \"C.*ook\" filename # Nothing or any number of characters ","date":"2020-01-23","objectID":"/linux-basics/:0:2","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"3. find – walk a file hierarchy # find files find . -name \"_config.yml\" find ./fruit -iname apple.txt #case insensitive e.g. apple.txt, Apple.txt find dir1 ! -name \"*.py\" find . -type f -empty # find empty files find /home -group Developer # by group find /home -user Lucy -iname \"*.txt\" find / -mtime 50 # To find all the files which are modifed 50 days back find / -cmin -60 # Find changed files in last 1 hour find / -size +50M -size -100M # Size between 50MB - 100MB find . -size +1000000c -print # file size \u003e 1MB find ./GFG -perm 664 #search for file with entered permission find /etc -type l # l:linked # find directories find . -type d -name _posts find . -type d -empty # find and delete find ./fruit -name grape.txt -exec rm -i {} # find and delete a file with confirmation find ./ -mtime +3 -print|xargs rm -f –r # find and grep find ./ -type f -name \"*.txt\" -exec grep 'Geek' {} \\ #search text within multiple files find . -type f| xargs grep \"hostname\" #用grep命令在所有的普通文件中搜索hostname这个词 ","date":"2020-01-23","objectID":"/linux-basics/:0:3","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"4. Redirect ls -al \u003e listings Mail -s \"Subject\" to-address \u003c Filename cat filename \u003e\u003e listings # \u003e\u003e To add more content to the existing file # ERROR Rediction ls abc 2\u003eerrorsfile #redicting error to errorsfile find . -name 'my*' 2\u003eerror.log ls Documents ABC\u003e dirlist 2\u003e\u00261 #both standard output and error are re-directed to dirlis ","date":"2020-01-23","objectID":"/linux-basics/:0:4","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"5. Piping ls -l -\u003e temp sort record.txt | uniq cat sample2.txt | head -7 | tail -5 ls -l | find ./ -type f -name \"*.txt\" -exec grep \"program\" {} \\; ","date":"2020-01-23","objectID":"/linux-basics/:0:5","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"6. \u0026\u0026, ||, !, \u0026, (), cp ~/Desktop/1.txt ~/1.txt \u0026\u0026 rm ~/Desktop/1.txt \u0026\u0026 echo \"success\" # and rm ~/Desktop/1.txt || echo \"fail\" # or rm ~/Desktop/1.txt || (cd ~/Desktop/;ls -a;echo \"fail\") #or rm -r !(*.html) ping ­c5 www.tecmint.com \u0026 apt-get update \u0026 apt-get upgrade \u0026 echo {1..10} # print 1,2,...,10 echo {10..2..2} #print 10,8,6,..,2 A=1;echo $A;{ A=2; };echo $A #? A=1;echo $A;( A=2; );echo $A #? ","date":"2020-01-23","objectID":"/linux-basics/:0:6","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"7. Special variable -, $_ #\\_ 在此之前执行的命令或者脚本的最后一个参数 mkdir -p udacity-git-course/new-git-project \u0026\u0026 cd $_ ","date":"2020-01-23","objectID":"/linux-basics/:0:7","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"8. tar Create tar Archive File: compress and uncompress files c: Create a new .tar archive file v: Verbosely show the .tar file progress f: File name type of the archive file (?) tar -cvf all-fruit-06-26-20.tar dir1/dir2 Create tar.gz tar.bz2 Archive File: To create a compressed gzip archive file we use the option asz. # Note : tar.gz and tgz both are similar tar -cvzf all-fruit-06-26-20.tar.gz dir1/dir2 tar -cvzf all-fruit-06-26-20.tar.tgz dir1/dir2 # Note: tar.bz2 tar.tbz tar.tb2 are similar tar -cvzf all-fruit-06-26-20.tar.bz2 dir1/dir2 Untar tar Archive File: To untar or extract a tar file, just issue following command using optionx (extract). If you want to untar in a different directory then use option as-C(specified directory). # Untar files in Current Directory tar -xvf all-fruit-06-26-20.tar # Untar files in specified Directory tar -xvf all-fruit-06-26-20.tar -C ~/Documents/fruit # Untar files in tar.gz tar -xvf all-fruit-06-26-20.tar.gz # Untar files in tar.bz2 tar -xvf all-fruit-06-26-20.tar.bz2 List Content of tar Archive File: To list the contents of tar archive file, just run the following command with option t (list content). tar -tvf all-fruit-06-26-20.tar tar -tvf all-fruit-06-26-20.tar.gz tar -tvf all-fruit-06-26-20.tar.bz2 zip and unzip zip: to compress files into a zip archive unzip: to extract files from a zip archive. # compress zip -r fruit.zip /dir1/dir2 #-r: Travel the directory structure recursively zip -q -r fruip.zip * # if we are in the directory # uncompress unzip file.zip -d destination_folder # if the source and destination directories are the same unzip file.zip ","date":"2020-01-23","objectID":"/linux-basics/:0:8","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"9. chmod – change file modes or Access Control Lists #sets read, write, and execute permissions for user, and sets read permission for Group and Others chmod 744 myCV.txt 7(111):rwx user 5(101):r-x group 4(100):r– Other ","date":"2020-01-23","objectID":"/linux-basics/:0:9","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["tech doc"],"content":"References: Learn basic commands for Linux, a free and open-source operating system that you can make changes to and redistribute. Learn important and helpful commands and programs often executed by intermediate Linux users. 18 Tar Command Examples in Linux linux中强大且常用命令：find、grep by 吴秦 error redirection ","date":"2020-01-23","objectID":"/linux-basics/:0:10","tags":["linux"],"title":"Basic Linux Commands","uri":"/linux-basics/"},{"categories":["other"],"content":"主角：弟弟的闺女（yc） 基本情况：今年秋天刚入老家小镇上的幼儿园  上周与小侄女视频，讲完一个故事，我问她故事里提到了哪几个小动物？她说“鸭子！鸭子！” 好吧，我翻开书，找到那些动物，指出来再问。她还是喊“鸭子！鸭子！” 讲故事时她还自己说出那些动物的名子，这会儿不知道是什么情况？！我觉得她是故意捣乱，于是假装生气地对她说，“你再这样，姑姑就不跟你讲故事了”。听见这话，她马上沉下脸，扭过头去朝着奶奶说，“我不想跟姑姑视频了！” 过了一会儿，我再叫她，她问我“干啥?！”。我说，跟姑姑再见吧，她很小声地说了句拜拜就走开了。  当时想不明白她的行为，后来在看了卢安克的书时，突然想到这个事情并且意识到她那样做的原因了。是我当时没有理解她—她是在模仿故事里的鸭子。故事里那只鸭子想跟别的动物说有危险，却每次只会喊“鸭子！”，别的动物都批评、嫌弃它，最终农场的屋子被飞来的物体砸坏了。模仿！在她那个年龄的世界里，模仿是生活里比重很大的事情，而我却忽略了这一点，以问答的逻辑去期待她的回应，这可能便是当时横亘在我们之间影响沟通的墙。巧合的是，不知写这个绘本故事的作者是否也想表达类似的意思，面对还只会喊一个词汇的小鸭子，那些年龄大的动物们不停地教训他，认为他没有礼貌，却没有试图去理解这只小鸭子，最后导致一场本有可能避免的灾难发生。 ","date":"2019-09-30","objectID":"/%E6%A8%A1%E4%BB%BF/:0:0","tags":["yc"],"title":"模仿","uri":"/%E6%A8%A1%E4%BB%BF/"},{"categories":["tech doc"],"content":"Headers ","date":"2019-07-15","objectID":"/markdown-basics/:1:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"h3 h4 h5 ### h3 #### h4 ##### h5 ","date":"2019-07-15","objectID":"/markdown-basics/:1:1","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Horizontal rules --- ","date":"2019-07-15","objectID":"/markdown-basics/:2:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Italics, Bold Hello Hello Hello _Hello_ **Hello** ~~Hello~~ ","date":"2019-07-15","objectID":"/markdown-basics/:3:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Image Note: 为避免冲突，注意下面代码的\u003c前面多了一个空格，实际用是不需要。 {{ \u003c image src=\"https://i.loli.net/2020/02/22/e85NALZaliucnsG.jpg\" caption=\"Moon\" \u003e}} {{ \u003c image src=\"https://tva1.sinaimg.cn/large/007S8ZIlly1gjcmw9ep28j31900u07k9.jpg\" caption=\"Lighthouse\" src_s=\"https://tva1.sinaimg.cn/large/007S8ZIlly1gjcmx0bf63j30b407emxs.jpg\" src_l=\"https://tva1.sinaimg.cn/large/007S8ZIlly1gjcmxx8j8fj31900u0kjl.jpg\" \u003e}} Moon\" Moon Lighthouse (image)\" Lighthouse (image) Linking Images {{ \u003c figure src=\"https://i.loli.net/2020/06/27/k3puFt1SbBLzv9i.jpg\" title=\"osprey\" link=\"https://swallowblack.github.io/osprey-back/\" width=30% \u003e}} osprey ","date":"2019-07-15","objectID":"/markdown-basics/:4:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Code int i; for (i=1; i\u003c=9; i++) { cout \u003c\u003c i*i \u003c\u003c endl; } ```cpp int i; for (i=1; i\u003c=9; i++) { cout \u003c\u003c i*i \u003c\u003c endl; } ``` ","date":"2019-07-15","objectID":"/markdown-basics/:5:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Lists ","date":"2019-07-15","objectID":"/markdown-basics/:6:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"unordered List line1 -line1.1(2 blank space) line1.2 line2 line3 - line1 -line1.1(2 blank space) - line1.2 - line2 - line3 ","date":"2019-07-15","objectID":"/markdown-basics/:6:1","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Ordered List line1 1.1 line1.1 （3 blank space） 1.2 line1.2 line2 line3 1. line1 1.1 line1.1 （3 blank space） 1.2 line1.2 2. line2 3. line3 ","date":"2019-07-15","objectID":"/markdown-basics/:6:2","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Table colname colname colname Lucy 15 apple colname|colname|colname --|---|--- Lucy|15|apple ","date":"2019-07-15","objectID":"/markdown-basics/:7:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Math $$\\frac{x_1^2+x_2^2}{3}$$ $$\\sum_{k=1}^n\\frac{1}{k}$$ $$\\int_a^b f(x)dx$$ $$E=mc^2$$ $$\\frac{x_1^2+x_2^2}{3}$$ $$\\sum_{k=1}^n\\frac{1}{k}$$ $$\\int_a^b f(x)dx$$ $$E=mc^2$$ ","date":"2019-07-15","objectID":"/markdown-basics/:8:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Escaping Backticks \\\\ \\` \\* \\_ \\{} \\[] \\() \\# \\+ \\- \\. \\! ","date":"2019-07-15","objectID":"/markdown-basics/:9:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"URLs and Email Addresses \u003chttps://swallowblack.github.io\u003e \u003czhangsan@example.com\u003e The rended output looks like this: https://swallowblack.github.io zhangsan@example.com ","date":"2019-07-15","objectID":"/markdown-basics/:10:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Adding Title and Formatting Links This is my personal website SwallowBlack This is about Turkey Vulture This is my personal website **[SwallowBlack](https://swallowblack.github.io/)** This is about *[Turkey Vulture](https://swallowblack.github.io/2020/02/17/Turkey-Vulture/)* ","date":"2019-07-15","objectID":"/markdown-basics/:11:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Reference-sytle Links ? ","date":"2019-07-15","objectID":"/markdown-basics/:12:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"Blockquotes Blockquotes can contain multiple paragraphs. Add a \u003e on the blank lines between the paragraphs. Tomorrow is another day! Today is a good day! \u003eTomorrow is another day! \u003e \u003eToday is a good day! Nested Blockquotes: Tomorrow is another day! Today is a good day! \u003e Tomorrow is another day! \u003e \u003e\u003e Today is a good day! ","date":"2019-07-15","objectID":"/markdown-basics/:13:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"},{"categories":["tech doc"],"content":"References: https://www.markdownguide.org/basic-syntax/#links ","date":"2019-07-15","objectID":"/markdown-basics/:14:0","tags":["markdown"],"title":"Markdown Basics","uri":"/markdown-basics/"}]