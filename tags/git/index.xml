<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>git - 标签 - Meng-Z</title>
        <link>http://example.org/tags/git/</link>
        <description>git - 标签 - Meng-Z</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 17 Feb 2020 21:14:31 -0400</lastBuildDate><atom:link href="http://example.org/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>Create a Repo to Track Your Computer&#39;s Settings</title>
    <link>http://example.org/posts/track-your-computer-settings/</link>
    <pubDate>Mon, 17 Feb 2020 21:14:31 -0400</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/track-your-computer-settings/</guid>
    <description><![CDATA[As a beginner, I manually add several dotfiles to the Repo like this.
# Create a Repo git clone git@github.com:&lt;username&gt;/dotfiles.git cd dotfiles mv ~/.vimrc . git add .vimrc git commit -m &#34;your message&#34; # Symbolically linking files ln -s /path/to/dotfiles/.vimrc ~/.vimrc # push to remote git push origin master References: Some tutorials : Guide to dotfiles on Github]]></description>
</item><item>
    <title>Version Control with Git</title>
    <link>http://example.org/posts/version-control-with-git/</link>
    <pubDate>Sun, 16 Feb 2020 20:42:34 -0400</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/version-control-with-git/</guid>
    <description><![CDATA[<p>Study note of the Course: <a href="https://www.udacity.com/course/version-control-with-git--ud123" target="_blank" rel="noopener noreffer">Udacity Course: Version Control with Git</a></p>
<h2 id="what-is-version-control">What is version Control</h2>
<p>Example: Control -Z</p>
<p>Types of Version Control: Centralized and Distributed(e.g. Git)</p>
<p>Terminology: SCM(Source Control Manager)/VCS(Version Control System)</p>
<p>Git Setup and Config</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># sets up Git with your name</span>
git config --global user.name <span class="s2">&#34;&lt;Your-Full-Name&gt;&#34;</span>
<span class="c1"># sets up Git with your email</span>
git config --global user.email <span class="s2">&#34;&lt;your-email-address&gt;&#34;</span>
<span class="c1"># makes sure that Git output is colored</span>
git config --global color.ui auto
<span class="c1"># displays the original state in a conflict</span>
git config --global merge.conflictstyle diff3
git config --list
git config --global core.editor <span class="s2">&#34;mvim -f&#34;</span>
</code></pre></div>]]></description>
</item></channel>
</rss>
